<?php
/**
 * @file
 * Currencies module.
 */

/**
 * Implements hook_theme().
 */
function demo_currencies_theme() {
  $theme['currency_rate'] = array(
    'render element' => 'elements',
    'file' => 'currency_rate.page.inc',
    'template' => 'currency_rate',
  );
  return $theme;
}

function demo_currencies_entity_base_field_info_alter(&$fields, \Drupal\Core\Entity\EntityTypeInterface $entity_type) {
  if ($entity_type->id() === 'currency') {
    // $title = $fields['title'];
    // $title->addPropertyConstraints('value', ['Length' => ['max' => 5]]);
  }
}

function demo_currencies_entity_type_alter(array &$entity_types) {
  // $node=$entity_types['node'];
  // $node->addConstraint('ConstraintPluginName',['array','of','options']);
}

function demo_currencies_entity_bundle_field_info_alter(&$fields, \Drupal\Core\Entity\EntityTypeInterface $entity_type, $bundle) {
 $a = 1;
}

/**
 * Implements hook_cron().
 *
 * We implement hook_cron() to do "background" processing. It gets called every
 * time the Drupal cron runs. We then decide what has to happen in response.
 */
function demo_currencies_cron() {
  $nbrb_currencies = \Drupal::service('demo_currencies.nbrb_currencies');
  $rates = $nbrb_currencies->getCurrenciesRateData();
  $date = $nbrb_currencies->getDate();
  $queue = \Drupal::queue('demo_currencies_currencies_rate');
  $datetime_current = new \Drupal\Core\Datetime\DrupalDateTime($date);
  $datatime_previous = NULL;
  if (\Drupal::state()->get('demo_currencies.currency_rates_date')) {
    $datatime_previous = new \Drupal\Core\Datetime\DrupalDateTime(\Drupal::state()
      ->get('demo_currencies.currency_rates_date'));
  }
  \Drupal::logger('demo_currencies')->notice('Getting of currencies rates ran');
  if ($datetime_current > $datatime_previous && count($rates)) {
    foreach ($rates as $rate) {
      $rate['date'] = $date;
      $queue->createItem($rate);
    }
    drupal_set_message(t('Getting of currencies rates executed at %time', ['%time' => date_iso8601(REQUEST_TIME)]));
    \Drupal::state()->set('demo_currencies.currency_rates_date', $datetime_current);
  }
}
